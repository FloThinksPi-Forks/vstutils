[tox]
envlist = py{27,34,35,36,37,3}-django{111,22}-{coverage,install}
skipsdist = True
whitelist_externals = 
    rm
    bash

[testenv]
passenv = *
changedir = test_src/
setenv =
    install: PYTHONPATH = ./:$PYTHONPATH
    coverage: PYTHONPATH = ../.:$PYTHONPATH
    COVRC = ../.coveragerc
    EXECUTE_ARGS = test_proj test -v 2 --failfast --parallel 4
    CCACHE_DIR = {envdir}/.ccache
whitelist_externals =
    rm
    bash
    pwd
commands =
    install: python ../setup.py compile
    install: bash -c "cd .. && pip install ./dist/vstutils-$(python -c 'import vstutils; print(vstutils.__version__)').tar.gz"[all]
    pwd
    install: python -m {env:EXECUTE_ARGS} {posargs}
    coverage: python ../setup.py install_egg_info
    coverage: pip install -U -e ..
    coverage: coverage erase --rcfile={env:COVRC}
    coverage: coverage run --rcfile={env:COVRC} {env:EXECUTE_ARGS} {posargs}
    coverage: coverage combine --rcfile={env:COVRC}
    coverage: coverage report --rcfile={env:COVRC}
    rm -rf ../.eggs ../build ../vstutils.egg-info ../dist
deps =
    cython>=0.29,<0.30
    py27-install: multiprocessing
    -rrequirements-test.txt
    django111: django>=1.11, <2.0
    django22: django>=2.2, <3.0
    django22: pysqlite3~=0.2.1
    coverage: -rrequirements.txt
    coverage: -rrequirements-rpc.txt
    coverage: -rrequirements-coreapi.txt
    coverage: -rrequirements-ldap.txt
    coverage: -rrequirements-doc.txt
    coverage: django-docs==0.3.1

[testenv:selenium]
passenv = DJANGO_LOG_LEVEL
changedir = ./
commands =
    coverage erase
    coverage run -m vstutils test -v 2 --failfast --noinput selenium_tests
    coverage combine
    coverage report
deps =
    cython>=0.28,<0.30
    selenium==3.14.1
    -e .[test,rpc,ldap,doc]

[testenv:pep]
deps =
    pep8
commands = 
  pep8

[testenv:flake]
deps =
    flake8
commands = 
  flake8 --config=.pep8 vstutils

[testenv:pylint]
basepython = python2.7
changedir = ./
deps =
    django>=1.11, <2.0
    cython
    pylint==1.6.5
    pylint-django==0.7.2
    pylint-plugin-utils==0.2.6
    -rrequirements.txt
    -rrequirements-ldap.txt
    -rrequirements-git.txt
    -rrequirements-coreapi.txt
commands =
  pylint --rcfile=./.pylintrc {posargs} vstutils

[testenv:builddoc]
changedir = ./doc/
whitelist_externals =
    cp
    make
commands =
    make html
deps =
  -e .[doc]

[testenv:build]
passenv = *
changedir = .
whitelist_externals =
    tox
    rm
commands =
    rm -rf dist build
    tox -c tox_build.ini --workdir {toxworkdir}
